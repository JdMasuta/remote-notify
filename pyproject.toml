[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "remote-notify"
dynamic = ["version"]
description = "Send desktop notifications to remote Linux machines via SSH"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Your Name", email = "your.email@example.com"},
]
maintainers = [
    {name = "Your Name", email = "your.email@example.com"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: System Administrators",
    "Intended Audience :: Developers",
    "Topic :: System :: Networking",
    "Topic :: System :: Systems Administration",
    "Topic :: Communications",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
    "Environment :: Console",
]
keywords = ["ssh", "notification", "remote", "desktop", "linux", "ubuntu", "notify-send"]
requires-python = ">=3.7"
dependencies = [
    "fabric>=3.0.0",
    "questionary>=2.0.0",
    "rich>=13.0.0",
    "validators>=0.20.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=22.0",
    "flake8>=4.0",
    "mypy>=0.910",
    "pre-commit>=2.15",
    "twine>=4.0",
    "build>=0.8",
]
test = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "pytest-mock>=3.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/remote-notify"
Documentation = "https://github.com/yourusername/remote-notify#readme"
Repository = "https://github.com/yourusername/remote-notify.git"
"Bug Tracker" = "https://github.com/yourusername/remote-notify/issues"
Changelog = "https://github.com/yourusername/remote-notify/blob/main/CHANGELOG.md"

[project.scripts]
remote-notify = "remote_notify.cli:main"
rnotify = "remote_notify.cli:main"

[tool.setuptools]
packages = ["remote_notify"]

[tool.setuptools.dynamic]
version = {attr = "remote_notify.__version__"}

[tool.setuptools.package-data]
remote_notify = ["py.typed"]

[tool.black]
line-length = 88
target-version = ['py37', 'py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.7"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=remote_notify",
    "--cov-report=html",
    "--cov-report=term-missing",
]

[tool.coverage.run]
source = ["remote_notify"]
omit = [
    "*/tests/*",
    "*/test_*.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]